@page "/shoppingcart"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization;
@using Newtonsoft.Json;
@using TicketHive.Shared.Models;
@using TicketHive.Shared;
@inject IShoppingcartRepo shoppingcartRepo;
@inject NavigationManager navigationManager;
@inject IUserRepo userRepo;
@inject IEventRepo eventRepo;
<h3>Shoppingcart</h3>

<div id="TheDiv">

@if (cartItems != null)
    {
        <table id="thetable">

            <thead id="table-head">

                <tr id="head-display">
                    <th></th>
                    <th>Name</th>
                    <th>Change Amount Tickets?</th>
                    <th>Price</th>
                    <th></th>

                </tr>


            </thead>

            <tbody id="table-body">


                @foreach (var item in cartItems) 
                {
                    <tr id="table-row">
                        <td><img id="img" src="/Images/@item.EventModel.Image"/></td>
                        <td id="item-display">@item.EventModel.EventName</td>


                        <td>

                            <select id="input-combobox" @bind="item.Quantity">
                            @for (int i = 1; i < 11; i++)
                            {
                                <option value=@i>@i.ToString()</option>
                            }

                            </select>
                        </td>
                        <td>@TicketPrice(item.EventModel.PricePerTicket, item.Quantity) Kr</td>
                        <td> <input class="btn btn-danger" type="button" @onclick="(() => RemoveFromCart(item.EventModelId))" value="REMOVE" /> </td>
                        


                    </tr>
               

                }
            


            </tbody>

            <tfoot id="tfoot">
                <tr >
                    <td colspan="4"style="text-align:right">Total Price:@TotalPrice(cartItems) Kr</td>
                    <td colspan="5" style="text-align:right">
                        <input class="btn btn-success" type="button" value="Book Events" @onclick="AddBookingsToUser" />
                    </td>
                    
                </tr>

            

            </tfoot>

        </table>
        
        
}
    @if(cartItems == null)
    {
        <h1>No Items</h1>
    }
</div>

<div id="button-div">
    
</div>


@code {
    private List<BookingModel> cartItems = new();

    protected override async Task OnInitializedAsync()
    {
        await UpdateCartItems();
    }

    private async Task RemoveFromCart(int eventId)
    {
        await shoppingcartRepo.RemoveFromCart(eventId);
        await UpdateCartItems();
    }

    private async Task AddBookingsToUser()
    {
        foreach (var item in cartItems)
        {
            UserModel eventDbUser = await userRepo.GetLoggedInUser();
            BookingInfoModel bookingInfo = new()
                {
                    User = eventDbUser,
                    Booking = item
                };

            if (!await userRepo.CheckIfBookingExists(item))
            {
                await eventRepo.UpdateAvailableEventTickets(item.EventModelId, item.Quantity);
                await userRepo.AddBookingToUser(bookingInfo);
                navigationManager.NavigateTo("/confirmation");
            }
            // TODO: Implement error message code here specifying which item is already booked

        }
        
    }

    public decimal TicketPrice(decimal PricePerTicket, int quantity)
    {
        return PricePerTicket * quantity;
    }

    private decimal TotalPrice(List<BookingModel> cartItems)
    {
        decimal totalPrice = 0;

        foreach (var item in cartItems)
        {
            totalPrice += TicketPrice(item.EventModel.PricePerTicket, item.Quantity);
        }
        return totalPrice;
    }

    private async Task UpdateCartItems()
    {
        cartItems = await shoppingcartRepo.GetCartFromLocalStorage();
    }





}
<style>
    #tfoot{
        background-color:white;
    }

    #button-div{
        position: absolute; 
        bottom: 0; 
        right: 0; 
        margin: 10px; 
       
    }
    #table-row{
        text-align:center;
        margin-left:10px;
    }
    #table-body{
        background-color:white;
        border-bottom: 2px solid black;
        padding: 20px 0;
    }
    #title{
        text-align:center;
        font-family:monospace;
        color: #305076
    }
    #img{
        margin-top:30px;
        margin-bottom:30px;
        max-width:300px;

    }
    #TheDiv{
        display:flex;
        justify-content:center;
        align-items:center;
        align-content:space-between;
        
        
    }
    #thetable{
        border-collapse:collapse;
        border-spacing:100px;
        width:65%;
        height:350px;
        
        
        
        
    }
    #table-head{
        background-color:grey;
        text-align:center;
    }
    tr{
        border-bottom: 2px solid black;
        padding: 20px 0;
        
    }
    

    

    




</style>




         



           