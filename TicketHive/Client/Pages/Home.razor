@page "/home"
@using TicketHive.Shared.Models;
@inject IBookingRepo bookingRepo
@inject IEventRepo eventRepo;
@inject IUserRepo userRepo;
@inject AuthenticationStateProvider authProvider
<h3>Home</h3>


<button @onclick="AddBooking">Add example booking to current user</button>

@if (eventDbUser != null)
{
    foreach (var item in eventDbUser.Bookings)
    {
        <h3>@item.EventModel.EventName</h3>
    }
}




@code {
    private string? username;
    private UserModel? eventDbUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();

        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            username = user.Identity.Name;
        }
        eventDbUser = await userRepo.GetUser(username);
    }

    private async Task AddBooking()
    {
        EventModel? eventToAdd = await eventRepo.GetEvent(1);


        if (this.eventDbUser != null && eventDbUser != null)
        {
                BookingModel booking = new()
                {
                    EventModelId = this.eventDbUser.Id,
                    UserModelId = eventDbUser.Id,
                    Quantity = 1

                };

                await bookingRepo.AddBooking(booking);
        }
    }
}