@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Newtonsoft.Json;
@using TicketHive.Shared.Models;
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService localStorage;


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

<AuthorizeView>
    <Authorized>

       
        <button id="btn-cart" class="fas fa-shopping-cart" @onclick="ShoppingCart">@ItemCount</button>
       
        <a style= "color: #305076"  href="authentication/profile">Hello, @context.User.Identity?.Name!</a>

        <button class="nav-link btn btn-link" @onclick="BeginLogOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a style= "color: #305076"  href="authentication/register">Register</a>
        <a style= "color: #305076"  href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }
    private void ShoppingCart()
    {
        Navigation.NavigateTo("/shoppingcart");
    }
}

<style> 
    #btn-cart {
     background-color: #305076 ;
     color: white;
     padding: 10px 20px;
     border: none;
     border-radius: 4px;
     font-size: 18px;
     cursor: pointer;
     transition: all 0.4s;
     }
     #btn-cart:hover{
     transform:translateY(-5px)
     }

        
</style>

@code{

    private int ItemCount = 0;

    private List<BookingModel> cartItems;

    protected override async Task OnInitializedAsync()
    {

        var jsonString = await localStorage.GetItemAsync<string>("cart");

        if (jsonString != null)
        {
            cartItems = JsonConvert.DeserializeObject<List<BookingModel>>(jsonString);
            ItemCount = cartItems.Count;
        }
    }




    //protected override async Task OnInitializedAsync()
    //{
    //    List<BookingModel> cart = await localStorage.GetItemAsync<List<BookingModel>>("cart");
    //    ItemCount = cart.Count;
    //}

    //public async Task GetItems()
    //{
    //    List<BookingModel> cart = await localStorage.GetItemAsync<List<BookingModel>>("cart");

    //    int ItemCount = 0;
    //    foreach(BookingModel booking in cart)
    //    {
    //        ItemCount++;
    //    }
    //}


}